version: 2.1

orbs:
  test-orb:
    commands:
      destroy-volume-containers:
        description: >
          This command removes existing Docker containers
        parameters:
          always:
            type: boolean
            default: true
        steps:
          - remove-docker-containers:
              always: << parameters.always >>
              container-name: input
          - remove-docker-containers:
              always: << parameters.always >>
              container-name: output
      download-public-key:
        description: >
          This command downloads the public key required to sign an Alpine Linux package
        steps:
          - run:
              name: Download public signing key
              command: |
                wget https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
                echo "823b54589c93b02497f1ba4dc622eaef9c813e6b0f0ebbb2f771e32adf9f4ef2  sgerrand.rsa.pub" | sha256sum -c -
      copy-build-files:
        description: >
          This command copies the package's build files and public key 
        parameters:
          signing-public-key-name:
            type: string
            default: 'sgerrand.rsa.pub'
            description: Name of public key file used for signing packages.
        steps:
          - validate-docker-containers:
              container-name: input
          - validate-docker-containers:
              container-name: output
          - run:
              name: Copy build files into Docker container
              command: docker cp . input:/home/builder/package/
          - run:
              name: Copy public key into Docker container
              command: docker cp << parameters.signing-public-key-name >> output:/packages/<< parameters.signing-public-key-name >>
      create-volume-containers:
        description: >
          This command creates Docker containers for volume mounting
        parameters:
          tag:
            type: string
            default: "latest"
            description: Docker image tag for the Alpine Linux image
        steps:
          - run:
              name: Create Docker container for build files
              command: docker create --name input --volume /home/builder/package alpine:<< parameters.tag >> /bin/true
          - run:
              name: Create Docker container for outputting packages
              command: docker create --name output --volume /packages alpine:<< parameters.tag >> /bin/true
      build-packages:
        description: >
          This command builds any packages described in the build script.
          Requires signing private key.
        parameters:
          signing-private-key:
            type: string
            default: ''
            description: Private key used for signing packages. Format must comply with that described in https://wiki.alpinelinux.org/wiki/Abuild_and_Helpers#abuild-keygen
          signing-private-key-name:
            type: string
            default: 'sgerrand.rsa'
            description: Name of private key file used for signing packages.
          tag:
            type: string
            default: '3.19'
            description: Tag for abuild Docker image.
        steps:
          - unless:
              condition: << parameters.signing-private-key >>
              steps:
                - run:
                    name: No value set for parameters.signing-private-key, exit
                    command: exit 1
          - unless:
              condition: << parameters.signing-private-key-name >>
              steps:
                - run:
                    name: No value set for parameters.signing-private-key-name, exit
                    command: exit 1
          - run:
              name: Build and sign Alpine Linux packages
              command: >
                docker run --env RSA_PRIVATE_KEY --env RSA_PRIVATE_KEY_NAME \
                  --volumes-from input --volumes-from output \
                    sgerrand/alpine-abuild:<< parameters.tag >>
              environment:
                RSA_PRIVATE_KEY: << parameters.signing-private-key >>
                RSA_PRIVATE_KEY_NAME: << parameters.signing-private-key-name >>
      extract-packages:
        description: >
          This command extracts built packages
        steps:
          - validate-docker-containers:
            container-name: output
          - run:
              name: Extract packages from Docker container
              command: |
                mkdir -p packages
                docker cp output:/packages/builder packages/
      remove-docker-containers:
        description: >
          This command removes an existing Docker container by name
        parameters:
          always:
            type: boolean
            default: true
          container-name:
            type: string
            default: ''
            description: Name of the Docker container to remove
        steps:
          - when:
              condition: << parameters.always >>
              steps:
                - run:
                    name: Remove << parameters.container-name >> Docker container
                    command: docker rm << parameters.container-name >>
                    when: always
          - unless:
              condition: << parameters.always >>
              steps:
                - run:
                    name: Remove << parameters.container-name >> Docker container
                    command: docker rm << parameters.container-name >>
      validate-docker-containers:
        description: >
          This command validates that a Docker container exists, based on certain criteria
        parameters:
          status:
            type: string
            default: 'created'
            description: Status of the Docker container to filter on
          container-name:
            type: string
            default: ''
            description: Name of the Docker container being searched for
        steps:
          - run:
              name: Check that required << parameters.container-name >> Docker container exists
              command: docker ps --filter='status=<< parameters.status >>' | grep -q << parameters.container-name >>

    executors:
      default:
        description: >
          This is an executor using Docker inside Docker.
        docker:
          - image: 'cimg/base:<<parameters.tag>>'
        parameters:
          tag:
            default: current
            description: >
              Pick a specific `docker` image variant:
              https://hub.docker.com/r/cimg/base/tags
            type: string

    jobs:
      build:
        executor: default

        parameters:
          signing-private-key:
            type: string
            default: ''
            description: Private key used for signing packages. Format must comply with that described in https://wiki.alpinelinux.org/wiki/Abuild_and_Helpers#abuild-keygen

        steps:
          - checkout
          - setup_remote_docker
          - download-public-key
          - create-volume-containers
          - copy-build-files
          - build-packages:
              signing-private-key: << parameters.signing-private-key >>
          - extract-packages
          - destroy-volume-containers

workflows:
  main:
    jobs:
      - test-orb/build:
          signing-private-key: RSA_PRIVATE_KEY
